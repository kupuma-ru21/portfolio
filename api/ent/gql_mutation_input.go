// Code generated by ent, DO NOT EDIT.

package ent

import (
	"portfolio-api/ent/company"
)

// CreateCompanyInput represents a mutation input for creating companies.
type CreateCompanyInput struct {
	Title    string
	Detail   string
	Link     string
	LinkType company.LinkType
	ImageURL string
}

// Mutate applies the CreateCompanyInput on the CompanyMutation builder.
func (i *CreateCompanyInput) Mutate(m *CompanyMutation) {
	m.SetTitle(i.Title)
	m.SetDetail(i.Detail)
	m.SetLink(i.Link)
	m.SetLinkType(i.LinkType)
	m.SetImageURL(i.ImageURL)
}

// SetInput applies the change-set in the CreateCompanyInput on the CompanyCreate builder.
func (c *CompanyCreate) SetInput(i CreateCompanyInput) *CompanyCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateCompanyInput represents a mutation input for updating companies.
type UpdateCompanyInput struct {
	Title    *string
	Detail   *string
	Link     *string
	LinkType *company.LinkType
	ImageURL *string
}

// Mutate applies the UpdateCompanyInput on the CompanyMutation builder.
func (i *UpdateCompanyInput) Mutate(m *CompanyMutation) {
	if v := i.Title; v != nil {
		m.SetTitle(*v)
	}
	if v := i.Detail; v != nil {
		m.SetDetail(*v)
	}
	if v := i.Link; v != nil {
		m.SetLink(*v)
	}
	if v := i.LinkType; v != nil {
		m.SetLinkType(*v)
	}
	if v := i.ImageURL; v != nil {
		m.SetImageURL(*v)
	}
}

// SetInput applies the change-set in the UpdateCompanyInput on the CompanyUpdate builder.
func (c *CompanyUpdate) SetInput(i UpdateCompanyInput) *CompanyUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateCompanyInput on the CompanyUpdateOne builder.
func (c *CompanyUpdateOne) SetInput(i UpdateCompanyInput) *CompanyUpdateOne {
	i.Mutate(c.Mutation())
	return c
}

// CreateUserInput represents a mutation input for creating users.
type CreateUserInput struct {
	Email    string
	Password string
}

// Mutate applies the CreateUserInput on the UserMutation builder.
func (i *CreateUserInput) Mutate(m *UserMutation) {
	m.SetEmail(i.Email)
	m.SetPassword(i.Password)
}

// SetInput applies the change-set in the CreateUserInput on the UserCreate builder.
func (c *UserCreate) SetInput(i CreateUserInput) *UserCreate {
	i.Mutate(c.Mutation())
	return c
}
