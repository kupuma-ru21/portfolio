package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"portfolio-api/ent"
	"portfolio-api/ent/blog"

	"github.com/google/uuid"
)

// CreateBlog is the resolver for the createBlog field.
func (r *mutationResolver) CreateBlog(ctx context.Context, input ent.CreateBlogInput) (uuid.UUID, error) {
	blog, err := r.Client.Blog.Create().SetInput(input).Save(ctx)
	if err != nil {
		return uuid.Nil, err
	}
	return blog.ID, nil
}

// UpdateBlog is the resolver for the updateBlog field.
func (r *mutationResolver) UpdateBlog(ctx context.Context, id uuid.UUID, input ent.UpdateBlogInput) (uuid.UUID, error) {
	_, err := r.Client.Blog.UpdateOneID(id).SetInput(input).Save(ctx)
	if err != nil {
		return uuid.Nil, err
	}
	return id, nil
}

// DeleteBlog is the resolver for the deleteBlog field.
func (r *mutationResolver) DeleteBlog(ctx context.Context, id uuid.UUID) (uuid.UUID, error) {
	err := r.Client.Blog.DeleteOneID(id).Exec(ctx)
	if err != nil {
		return uuid.Nil, err
	}
	return id, nil
}

// Blogs is the resolver for the blogs field.
func (r *queryResolver) Blogs(ctx context.Context) ([]*ent.Blog, error) {
	return r.Client.Blog.Query().All(ctx)
}

// DraftBlogs is the resolver for the draftBlogs field.
func (r *queryResolver) DraftBlogs(ctx context.Context) ([]*ent.Blog, error) {
	return r.Client.Blog.Query().
		Where(blog.IsDraft(true)).
		All(ctx)
}

// Blog is the resolver for the blog field.
func (r *queryResolver) Blog(ctx context.Context, id uuid.UUID) (*ent.Blog, error) {
	return r.Client.Blog.Get(ctx, id)
}
