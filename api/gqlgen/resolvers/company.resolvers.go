package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"portfolio-api/ent"

	"github.com/google/uuid"
)

// CreateCompany is the resolver for the createCompany field.
func (r *mutationResolver) CreateCompany(ctx context.Context, input ent.CreateCompanyInput) (uuid.UUID, error) {
	app, err := r.Client.Company.Create().SetInput(input).Save(ctx)
	return app.ID, err
}

// UpdateCompany is the resolver for the updateCompany field.
func (r *mutationResolver) UpdateCompany(ctx context.Context, id uuid.UUID, input ent.UpdateCompanyInput) (uuid.UUID, error) {
	_, err := r.Client.Company.UpdateOneID(id).SetInput(input).Save(ctx)
	return id, err
}

// DeleteCompany is the resolver for the deleteCompany field.
func (r *mutationResolver) DeleteCompany(ctx context.Context, id uuid.UUID) (uuid.UUID, error) {
	err := r.Client.Company.DeleteOneID(id).Exec(ctx)
	return id, err
}

// Companies is the resolver for the companies field.
func (r *queryResolver) Companies(ctx context.Context) ([]*ent.Company, error) {
	return r.Client.Company.Query().All(ctx)
}

// Company is the resolver for the company field.
func (r *queryResolver) Company(ctx context.Context, id uuid.UUID) (*ent.Company, error) {
	return r.Client.Company.Get(ctx, id)
}
