package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"portfolio-api/ent"

	"github.com/google/uuid"
)

// CreateApp is the resolver for the createApp field.
func (r *mutationResolver) CreateApp(ctx context.Context, input ent.CreateAppInput) (uuid.UUID, error) {
	app, err := r.Client.App.Create().SetInput(input).Save(ctx)
	return app.ID, err
}

// UpdateApp is the resolver for the updateApp field.
func (r *mutationResolver) UpdateApp(ctx context.Context, id uuid.UUID, input ent.UpdateAppInput) (uuid.UUID, error) {
	_, err := r.Client.App.UpdateOneID(id).SetInput(input).Save(ctx)
	return id, err
}

// DeleteApp is the resolver for the deleteApp field.
func (r *mutationResolver) DeleteApp(ctx context.Context, id uuid.UUID) (uuid.UUID, error) {
	err := r.Client.App.DeleteOneID(id).Exec(ctx)
	return id, err
}

// Apps is the resolver for the apps field.
func (r *queryResolver) Apps(ctx context.Context) ([]*ent.App, error) {
	return r.Client.App.Query().All(ctx)
}

// App is the resolver for the app field.
func (r *queryResolver) App(ctx context.Context, id uuid.UUID) (*ent.App, error) {
	return r.Client.App.Get(ctx, id)
}
