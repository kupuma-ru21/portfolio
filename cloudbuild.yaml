# REF: https://cloud.google.com/build/docs/deploy-containerized-application-cloud-run
# REF: https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values#using_user-defined_substitutions
# REF: https://zenn.dev/jy8752/articles/351fc5d8c53029
# REF: https://cloud.google.com/workflows/docs/deploy-workflows-using-cloud-build
# REF: https://stackoverflow.com/questions/68779751/error-publishing-source-code-from-cloud-build-to-a-bucket-using-triggers
# REF: https://cloud.google.com/build/docs/securing-builds/use-secrets
# REF: gcloud builds submit --config cloudbuild.yaml
steps:
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
          cat <<EOF > client/.env
          VITE_GRAPHQL_SCHEMA_URL=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_VITE_GRAPHQL_SCHEMA_URL/versions/latest")
          VITE_GOOGLE_ANALYTICS_MEASUREMENT_ID=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_VITE_GOOGLE_ANALYTICS_MEASUREMENT_ID/versions/latest")
          VITE_GOOGLE_TAG_MANAGER_CONTAINER_ID=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_VITE_GOOGLE_TAG_MANAGER_CONTAINER_ID/versions/latest")
          VITE_EMAIL=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_VITE_EMAIL/versions/latest")
          VITE_RESEND_API_KEY=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_VITE_RESEND_API_KEY/versions/latest")
          EOF

  - name: "gcr.io/cloud-builders/docker"
    args:
      - build
      - -t
      - ${_CLIENT_IMAGE}
      - ./client
    automapSubstitutions: true

  - name: "gcr.io/cloud-builders/docker"
    args:
      - push
      - ${_CLIENT_IMAGE}

  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - run
      - deploy
      - ${_SERVICE}
      - --image
      - ${_CLIENT_IMAGE}
      - --region
      - ${_REGION}
      - --platform
      - managed
      - --allow-unauthenticated

  # api
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - -c
      - |
          cat <<EOF > api/.env
          ENV=prod
          POSTGRES_PORT=5432
          POSTGRES_DB=portfolio
          PORT=8080
          POSTGRES_USER=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_POSTGRES_USER/versions/latest")
          POSTGRES_PASSWORD=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_POSTGRES_PASSWORD/versions/latest")
          POSTGRES_HOST=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_POSTGRES_HOST/versions/latest")
          JWT_SECRET_KEY=$(gcloud secrets versions access "projects/$PROJECT_ID/secrets/$_JWT_SECRET_KEY/versions/latest")
          EOF

  - name: "gcr.io/cloud-builders/docker"
    args:
      - build
      - -t
      - ${_API_IMAGE}
      - ./api
    automapSubstitutions: true

  - name: "gcr.io/cloud-builders/docker"
    args:
      - push
      - ${_API_IMAGE}

  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - run
      - deploy
      - ${_API_SERVICE}
      - --image
      - ${_API_IMAGE}
      - --region
      - ${_REGION}
      - --update-secrets
      - POSTGRES_USER=${_POSTGRES_USER_SECRET}:latest
      - --platform
      - managed
      - --allow-unauthenticated

options:
  logging: CLOUD_LOGGING_ONLY
